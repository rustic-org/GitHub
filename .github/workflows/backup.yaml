name: Print Changed Files

on:
  push:
    branches:
      - main

jobs:
  print_changed_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
      - name: Get commit sha
        id: get-commit
        run: |
          from_commit="${{ github.event.before }}"
          to_commit="${{ github.event.after }}"
          commits_on_head="$(git rev-list HEAD)"
          backup_flag=false
          if [[ $commits_on_head =~ (^|[[:space:]])$from_commit($|[[:space:]]) ]] && \
             [[ $commits_on_head =~ (^|[[:space:]])$to_commit($|[[:space:]]) ]]
          then
              echo "Setting backup flag to true"
              backup_flag=true
          else
              echo "Either before commit [$from_commit] or after commit [$to_commit] is missing in HEAD"
              echo "Skipping backup"
          fi
          echo "backup_flag=$backup_flag" >> $GITHUB_ENV
      - name: Pythonic
        if: env.backup_flag == 'true'
        run: |
          cat << 'EOF' > script.py
          import requests
          from pprint import pprint
          with open('changed_files.txt') as file:
              changed = file.readlines()
          mapped = {"A": "add", "M": "modify", "R100": "moved", "R": "rename", "C": "copied"}
          payload = {"add": [], "modify": [], "move": [], "rename": [], "copy": [], "undefined": []}
          for change in changed:
              action, file_path = change.strip().rsplit('\t', 1)
              payload[mapped.get(action, 'undefined')].append(file_path)
          response = requests.post(url="${{ secrets.backup_url }}/backup",
                                   headers={"authorization": "Bearer ${{ secrets.backup_token }}",
                                            "content-location": $github.repository},
                                   json=payload)
          assert response.ok
          EOF
      - name: Get changed files
        id: changed-files
        if: env.backup_flag == 'true'
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
              git diff --name-status -r HEAD^1 HEAD > changed_files.txt
          else
              from_commit="${{ github.event.before }}"
              to_commit="${{ github.event.after }}"
              git diff --name-status "$from_commit" "$to_commit" > changed_files.txt
          fi
          echo "changed_files=changed_files.txt" >> $GITHUB_ENV
      - name: List changed files with actions
        if: env.backup_flag == 'true'
        run: |
          cat script.py
          python script.py
